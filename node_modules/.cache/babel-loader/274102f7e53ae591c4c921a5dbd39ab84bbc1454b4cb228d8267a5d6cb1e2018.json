{"ast":null,"code":"var _jsxFileName = \"/Users/rhg006/Documents/No-codePrefCenter/src/components/FormBuilder.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport DraggableItem from './DraggableItem';\nimport DropZone from './DropZone';\nimport PreferencePanel from './PreferencePanel';\nimport './FormBuilder.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst FormBuilder = () => {\n  _s();\n  const [formItems, setFormItems] = useState([]);\n  const [formValues, setFormValues] = useState({});\n  const [formErrors, setFormErrors] = useState({});\n  const [preferences, setPreferences] = useState({\n    email: true,\n    sms: false,\n    pushNotifications: false\n  });\n  const [isPreviewMode, setIsPreviewMode] = useState(false);\n  const fileInputRef = useRef(null);\n\n  // Load saved configuration on component mount\n  useEffect(() => {\n    const savedConfig = localStorage.getItem('formConfiguration');\n    if (savedConfig) {\n      const {\n        formItems: savedItems,\n        preferences: savedPrefs\n      } = JSON.parse(savedConfig);\n      setFormItems(savedItems);\n      setPreferences(savedPrefs);\n\n      // Initialize form values\n      const initialValues = {};\n      savedItems.forEach(item => {\n        initialValues[item.id] = '';\n      });\n      setFormValues(initialValues);\n    }\n  }, []);\n  const formControls = [{\n    id: 'background',\n    label: 'Background Color',\n    type: 'color',\n    defaultValue: '#ffffff',\n    required: true\n  }, {\n    id: 'formWidth',\n    label: 'Form Width',\n    type: 'select',\n    defaultValue: '400px',\n    required: true\n  }, {\n    id: 'heading',\n    label: 'Heading',\n    type: 'text',\n    defaultValue: '',\n    required: true\n  }, {\n    id: 'logo',\n    label: 'Logo Image',\n    type: 'file',\n    defaultValue: '',\n    required: false\n  }, {\n    id: 'headingColor',\n    label: 'Heading Font Color',\n    type: 'color',\n    defaultValue: '#000000',\n    required: true\n  }, {\n    id: 'inputLabel',\n    label: 'Input Label Color',\n    type: 'color',\n    defaultValue: '#4a5568',\n    required: true\n  }, {\n    id: 'buttonColor',\n    label: 'Submit Button Color',\n    type: 'color',\n    defaultValue: '#4299e1',\n    required: true\n  }, {\n    id: 'buttonText',\n    label: 'Submit Button Text',\n    type: 'text',\n    defaultValue: 'Submit',\n    required: true\n  }];\n  const handleDrop = item => {\n    // Check if it's a preference item\n    if (item.type === 'preference') {\n      // Generate a unique ID for each preference instance\n      const uniqueId = `${item.id}-${Date.now()}`;\n      const newPreferenceItem = {\n        ...item,\n        id: uniqueId,\n        defaultValue: false // Set default value for preference toggles\n      };\n      setFormItems(prevItems => [...prevItems, newPreferenceItem]);\n      setFormValues(prev => ({\n        ...prev,\n        [uniqueId]: false // Initialize the toggle state\n      }));\n    } else {\n      // Handle non-preference items as before\n      const newItem = {\n        ...item,\n        id: `${item.id}-${Date.now()}`,\n        defaultValue: item.defaultValue || ''\n      };\n      setFormItems(prevItems => [...prevItems, newItem]);\n      setFormValues(prev => ({\n        ...prev,\n        [newItem.id]: newItem.defaultValue\n      }));\n    }\n  };\n  const handlePreferenceChange = type => {\n    setPreferences(prev => ({\n      ...prev,\n      [type]: !prev[type]\n    }));\n  };\n  const handleDeleteItem = itemId => {\n    setFormItems(formItems.filter(item => item.id !== itemId));\n    setFormValues(prev => {\n      const newValues = {\n        ...prev\n      };\n      delete newValues[itemId];\n      return newValues;\n    });\n    setFormErrors(prev => {\n      const newErrors = {\n        ...prev\n      };\n      delete newErrors[itemId];\n      return newErrors;\n    });\n  };\n  const handleReorderItems = (startIndex, endIndex) => {\n    const reorderedItems = Array.from(formItems);\n    const [removed] = reorderedItems.splice(startIndex, 1);\n    reorderedItems.splice(endIndex, 0, removed);\n    setFormItems(reorderedItems);\n  };\n  const handleFormValueChange = (itemId, value) => {\n    setFormValues(prev => ({\n      ...prev,\n      [itemId]: value\n    }));\n\n    // Clear error when value changes\n    if (formErrors[itemId]) {\n      setFormErrors(prev => {\n        const newErrors = {\n          ...prev\n        };\n        delete newErrors[itemId];\n        return newErrors;\n      });\n    }\n  };\n  const validateForm = () => {\n    const errors = {};\n    formItems.forEach(item => {\n      if (item.required && !formValues[item.id]) {\n        errors[item.id] = `${item.label} is required`;\n      }\n    });\n    setFormErrors(errors);\n    return Object.keys(errors).length === 0;\n  };\n  const handleSaveConfiguration = () => {\n    if (!validateForm()) {\n      alert('Please fill in all required fields');\n      return;\n    }\n    const configuration = {\n      formItems,\n      preferences,\n      formValues\n    };\n    localStorage.setItem('formConfiguration', JSON.stringify(configuration));\n    alert('Form configuration saved successfully!');\n  };\n  const handleResetConfiguration = () => {\n    if (window.confirm('Are you sure you want to reset the configuration? This cannot be undone.')) {\n      localStorage.removeItem('formConfiguration');\n      setFormItems([]);\n      setFormValues({});\n      setFormErrors({});\n      setPreferences({\n        email: true,\n        sms: false,\n        pushNotifications: false\n      });\n    }\n  };\n  const handleExportConfiguration = () => {\n    const configuration = {\n      formItems,\n      preferences,\n      exportDate: new Date().toISOString()\n    };\n    const blob = new Blob([JSON.stringify(configuration, null, 2)], {\n      type: 'application/json'\n    });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = `form-config-${new Date().toISOString().slice(0, 10)}.json`;\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    URL.revokeObjectURL(url);\n  };\n  const handleImportClick = () => {\n    var _fileInputRef$current;\n    (_fileInputRef$current = fileInputRef.current) === null || _fileInputRef$current === void 0 ? void 0 : _fileInputRef$current.click();\n  };\n  const handleImportConfiguration = event => {\n    var _event$target$files;\n    const file = (_event$target$files = event.target.files) === null || _event$target$files === void 0 ? void 0 : _event$target$files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onload = e => {\n        try {\n          const result = e.target && e.target.result;\n          if (typeof result === 'string') {\n            const configuration = JSON.parse(result);\n            setFormItems(configuration.formItems);\n            setPreferences(configuration.preferences);\n            alert('Configuration imported successfully!');\n          }\n        } catch (error) {\n          alert('Error importing configuration. Please check the file format.');\n        }\n      };\n      reader.readAsText(file);\n    }\n    // Reset file input\n    if (fileInputRef.current) {\n      fileInputRef.current.value = '';\n    }\n  };\n  const handleStyleChange = (id, value) => {\n    setFormValues(prev => ({\n      ...prev,\n      [id]: value\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-builder\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sidebar-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Form Controls\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"preview-toggle\",\n          onClick: () => setIsPreviewMode(!isPreviewMode),\n          children: isPreviewMode ? 'Edit Mode' : 'Preview Mode'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this), !isPreviewMode && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"controls-container\",\n          children: formControls.map(control => /*#__PURE__*/_jsxDEV(DraggableItem, {\n            ...control,\n            value: formValues[control.id] || control.defaultValue,\n            onStyleChange: handleStyleChange\n          }, control.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(PreferencePanel, {\n          preferences: preferences,\n          onChange: handlePreferenceChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"save-button\",\n            onClick: handleSaveConfiguration,\n            children: \"Save Configuration\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"export-button\",\n            onClick: handleExportConfiguration,\n            children: \"Export Configuration\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"import-button\",\n            onClick: handleImportClick,\n            children: \"Import Configuration\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            ref: fileInputRef,\n            type: \"file\",\n            accept: \".json\",\n            style: {\n              display: 'none'\n            },\n            onChange: handleImportConfiguration\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"reset-button\",\n            onClick: handleResetConfiguration,\n            children: \"Reset Configuration\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-preview\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Form Preview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DropZone, {\n        onDrop: handleDrop,\n        items: formItems,\n        onDelete: handleDeleteItem,\n        onReorder: handleReorderItems,\n        isPreviewMode: isPreviewMode,\n        formValues: formValues,\n        formErrors: formErrors,\n        onValueChange: handleFormValueChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 216,\n    columnNumber: 5\n  }, this);\n};\n_s(FormBuilder, \"r1rpo/U3JC3XdlrE20BlIrE3I3k=\");\n_c = FormBuilder;\nexport default FormBuilder;\nvar _c;\n$RefreshReg$(_c, \"FormBuilder\");","map":{"version":3,"names":["React","useState","useEffect","useRef","DraggableItem","DropZone","PreferencePanel","jsxDEV","_jsxDEV","Fragment","_Fragment","FormBuilder","_s","formItems","setFormItems","formValues","setFormValues","formErrors","setFormErrors","preferences","setPreferences","email","sms","pushNotifications","isPreviewMode","setIsPreviewMode","fileInputRef","savedConfig","localStorage","getItem","savedItems","savedPrefs","JSON","parse","initialValues","forEach","item","id","formControls","label","type","defaultValue","required","handleDrop","uniqueId","Date","now","newPreferenceItem","prevItems","prev","newItem","handlePreferenceChange","handleDeleteItem","itemId","filter","newValues","newErrors","handleReorderItems","startIndex","endIndex","reorderedItems","Array","from","removed","splice","handleFormValueChange","value","validateForm","errors","Object","keys","length","handleSaveConfiguration","alert","configuration","setItem","stringify","handleResetConfiguration","window","confirm","removeItem","handleExportConfiguration","exportDate","toISOString","blob","Blob","url","URL","createObjectURL","a","document","createElement","href","download","slice","body","appendChild","click","removeChild","revokeObjectURL","handleImportClick","_fileInputRef$current","current","handleImportConfiguration","event","_event$target$files","file","target","files","reader","FileReader","onload","e","result","error","readAsText","handleStyleChange","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","control","onStyleChange","onChange","ref","accept","style","display","onDrop","items","onDelete","onReorder","onValueChange","_c","$RefreshReg$"],"sources":["/Users/rhg006/Documents/No-codePrefCenter/src/components/FormBuilder.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport DraggableItem from './DraggableItem';\nimport DropZone from './DropZone';\nimport PreferencePanel from './PreferencePanel';\nimport './FormBuilder.css';\n\nconst FormBuilder = () => {\n  const [formItems, setFormItems] = useState([]);\n  const [formValues, setFormValues] = useState({});\n  const [formErrors, setFormErrors] = useState({});\n  const [preferences, setPreferences] = useState({\n    email: true,\n    sms: false,\n    pushNotifications: false\n  });\n  const [isPreviewMode, setIsPreviewMode] = useState(false);\n  const fileInputRef = useRef(null);\n\n  // Load saved configuration on component mount\n  useEffect(() => {\n    const savedConfig = localStorage.getItem('formConfiguration');\n    if (savedConfig) {\n      const { formItems: savedItems, preferences: savedPrefs } = JSON.parse(savedConfig);\n      setFormItems(savedItems);\n      setPreferences(savedPrefs);\n      \n      // Initialize form values\n      const initialValues = {};\n      savedItems.forEach(item => {\n        initialValues[item.id] = '';\n      });\n      setFormValues(initialValues);\n    }\n  }, []);\n\n  const formControls = [\n    { id: 'background', label: 'Background Color', type: 'color', defaultValue: '#ffffff', required: true },\n    { id: 'formWidth', label: 'Form Width', type: 'select', defaultValue: '400px', required: true },\n    { id: 'heading', label: 'Heading', type: 'text', defaultValue: '', required: true },\n    { id: 'logo', label: 'Logo Image', type: 'file', defaultValue: '', required: false },\n    { id: 'headingColor', label: 'Heading Font Color', type: 'color', defaultValue: '#000000', required: true },\n    { id: 'inputLabel', label: 'Input Label Color', type: 'color', defaultValue: '#4a5568', required: true },\n    { id: 'buttonColor', label: 'Submit Button Color', type: 'color', defaultValue: '#4299e1', required: true },\n    { id: 'buttonText', label: 'Submit Button Text', type: 'text', defaultValue: 'Submit', required: true },\n  ];\n\n  const handleDrop = (item) => {\n    // Check if it's a preference item\n    if (item.type === 'preference') {\n      // Generate a unique ID for each preference instance\n      const uniqueId = `${item.id}-${Date.now()}`;\n      const newPreferenceItem = {\n        ...item,\n        id: uniqueId,\n        defaultValue: false // Set default value for preference toggles\n      };\n      \n      setFormItems(prevItems => [...prevItems, newPreferenceItem]);\n      setFormValues(prev => ({\n        ...prev,\n        [uniqueId]: false // Initialize the toggle state\n      }));\n    } else {\n      // Handle non-preference items as before\n      const newItem = { \n        ...item, \n        id: `${item.id}-${Date.now()}`,\n        defaultValue: item.defaultValue || ''\n      };\n      setFormItems(prevItems => [...prevItems, newItem]);\n      setFormValues(prev => ({\n        ...prev,\n        [newItem.id]: newItem.defaultValue\n      }));\n    }\n  };\n\n  const handlePreferenceChange = (type) => {\n    setPreferences(prev => ({\n      ...prev,\n      [type]: !prev[type]\n    }));\n  };\n\n  const handleDeleteItem = (itemId) => {\n    setFormItems(formItems.filter(item => item.id !== itemId));\n    setFormValues(prev => {\n      const newValues = { ...prev };\n      delete newValues[itemId];\n      return newValues;\n    });\n    setFormErrors(prev => {\n      const newErrors = { ...prev };\n      delete newErrors[itemId];\n      return newErrors;\n    });\n  };\n\n  const handleReorderItems = (startIndex, endIndex) => {\n    const reorderedItems = Array.from(formItems);\n    const [removed] = reorderedItems.splice(startIndex, 1);\n    reorderedItems.splice(endIndex, 0, removed);\n    setFormItems(reorderedItems);\n  };\n\n  const handleFormValueChange = (itemId, value) => {\n    setFormValues(prev => ({\n      ...prev,\n      [itemId]: value\n    }));\n    \n    // Clear error when value changes\n    if (formErrors[itemId]) {\n      setFormErrors(prev => {\n        const newErrors = { ...prev };\n        delete newErrors[itemId];\n        return newErrors;\n      });\n    }\n  };\n\n  const validateForm = () => {\n    const errors = {};\n    formItems.forEach(item => {\n      if (item.required && !formValues[item.id]) {\n        errors[item.id] = `${item.label} is required`;\n      }\n    });\n    setFormErrors(errors);\n    return Object.keys(errors).length === 0;\n  };\n\n  const handleSaveConfiguration = () => {\n    if (!validateForm()) {\n      alert('Please fill in all required fields');\n      return;\n    }\n\n    const configuration = {\n      formItems,\n      preferences,\n      formValues\n    };\n    localStorage.setItem('formConfiguration', JSON.stringify(configuration));\n    alert('Form configuration saved successfully!');\n  };\n\n  const handleResetConfiguration = () => {\n    if (window.confirm('Are you sure you want to reset the configuration? This cannot be undone.')) {\n      localStorage.removeItem('formConfiguration');\n      setFormItems([]);\n      setFormValues({});\n      setFormErrors({});\n      setPreferences({\n        email: true,\n        sms: false,\n        pushNotifications: false\n      });\n    }\n  };\n\n  const handleExportConfiguration = () => {\n    const configuration = {\n      formItems,\n      preferences,\n      exportDate: new Date().toISOString()\n    };\n    const blob = new Blob([JSON.stringify(configuration, null, 2)], { type: 'application/json' });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = `form-config-${new Date().toISOString().slice(0,10)}.json`;\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    URL.revokeObjectURL(url);\n  };\n\n  const handleImportClick = () => {\n    fileInputRef.current?.click();\n  };\n\n  const handleImportConfiguration = (event) => {\n    const file = event.target.files?.[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onload = (e) => {\n        try {\n          const result = e.target && e.target.result;\n          if (typeof result === 'string') {\n            const configuration = JSON.parse(result);\n            setFormItems(configuration.formItems);\n            setPreferences(configuration.preferences);\n            alert('Configuration imported successfully!');\n          }\n        } catch (error) {\n          alert('Error importing configuration. Please check the file format.');\n        }\n      };\n      reader.readAsText(file);\n    }\n    // Reset file input\n    if (fileInputRef.current) {\n      fileInputRef.current.value = '';\n    }\n  };\n\n  const handleStyleChange = (id, value) => {\n    setFormValues(prev => ({\n      ...prev,\n      [id]: value\n    }));\n  };\n\n  return (\n    <div className=\"form-builder\">\n      <div className=\"sidebar\">\n        <div className=\"sidebar-header\">\n          <h2>Form Controls</h2>\n          <button \n            className=\"preview-toggle\"\n            onClick={() => setIsPreviewMode(!isPreviewMode)}\n          >\n            {isPreviewMode ? 'Edit Mode' : 'Preview Mode'}\n          </button>\n        </div>\n        {!isPreviewMode && (\n          <>\n            <div className=\"controls-container\">\n              {formControls.map(control => (\n                <DraggableItem \n                  key={control.id}\n                  {...control}\n                  value={formValues[control.id] || control.defaultValue}\n                  onStyleChange={handleStyleChange}\n                />\n              ))}\n            </div>\n            <PreferencePanel \n              preferences={preferences}\n              onChange={handlePreferenceChange}\n            />\n            <div className=\"button-group\">\n              <button \n                className=\"save-button\"\n                onClick={handleSaveConfiguration}\n              >\n                Save Configuration\n              </button>\n              <button \n                className=\"export-button\"\n                onClick={handleExportConfiguration}\n              >\n                Export Configuration\n              </button>\n              <button \n                className=\"import-button\"\n                onClick={handleImportClick}\n              >\n                Import Configuration\n              </button>\n              <input\n                ref={fileInputRef}\n                type=\"file\"\n                accept=\".json\"\n                style={{ display: 'none' }}\n                onChange={handleImportConfiguration}\n              />\n              <button \n                className=\"reset-button\"\n                onClick={handleResetConfiguration}\n              >\n                Reset Configuration\n              </button>\n            </div>\n          </>\n        )}\n      </div>\n      <div className=\"form-preview\">\n        <h2>Form Preview</h2>\n        <DropZone \n          onDrop={handleDrop}\n          items={formItems}\n          onDelete={handleDeleteItem}\n          onReorder={handleReorderItems}\n          isPreviewMode={isPreviewMode}\n          formValues={formValues}\n          formErrors={formErrors}\n          onValueChange={handleFormValueChange}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default FormBuilder; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}